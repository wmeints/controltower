@inject PrinterStatus PrinterStatus
<div class="col-xl-12 col-md-12 mb-4">
    <div class="card border-left-primary shadow h-100 py-2">
        <div class="card-body">
            <div class="row no-gutters align-items-center">
                <div class="col mr-2">
                    <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Job Status: @PrinterStatus.Job.State</div>
                    @if (PrinterStatus.Job.State == PrintJobState.Running)
                    {
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@PrinterStatus.Job.StepsCompleted/@PrinterStatus.Job.TotalSteps Steps completed</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        PrinterStatus.Job.JobStatusChanged += (s, e) =>
        {
            InvokeAsync(StateHasChanged);
        };
    }

}
